version: "3.3"

services:

#   db:
#     restart: always
#     image: postgres
#     networks:
#       - testing_net
#     expose:
#       - "5432"
#     ports:
#       - "5432:5432"
#     volumes:
#       - .postgres_data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=myproject
#       - POSTGRES_USER=myprojectuser
#       - POSTGRES_PASSWORD=password
# devserver:
#   restart: always
#   build: server/
#   # command: /bin/bash -c "python tests.py"
#   # command: bash -c "sleep infinity"
#   # command: ls
#   command: bash django-run.sh
#   volumes:
#     - "./server/goalserver:/usr/src/app/"
#     - "~/.aws:/root/.aws"
#   env_file:
#       - secrets.env
#   expose:
#     - "8000"
#   ports:
#     - "8000:8000"
#   networks:
#     - testing_net
#   links:
#     - db:db
#   depends_on:
#     - db
#   environment:
#     - PGHOST=db
#     - PGDATABASE=myproject
#     - PGUSER=myprojectuser
#     - PGPASSWORD=password
  server:
    restart: always
    build: server/
    # command: /bin/bash -c "python tests.py"
    # command: bash -c "sleep infinity"
    # command: ls
    command: bash django-run.sh
    volumes:
      - "~/.aws:/root/.aws"
    env_file:
        - secrets.env
    expose:
      - "8000"
    ports:
      - "8000:8000"
    networks:
      - testing_net
  frontman:
    image: nginx:latest
    volumes:
      - ./nginx-frontman.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - server
    networks:
      - testing_net
    ports:
      - "80:80"
    expose:
      - "80"

# volumes:
#   postgres_data:

networks:
  testing_net:
    driver: "bridge"
